// Query TypeMap
import '@sanity/client'

/**
 * ---------------------------------------------------------------------------------
 * This file has been generated by Sanity TypeGen.
 * Command: `sanity typegen generate`
 *
 * Any modifications made directly to this file will be overwritten the next time
 * the TypeScript definitions are generated. Please make changes to the Sanity
 * schema definitions and/or GROQ queries if you need to update these types.
 *
 * For more information on how to use Sanity TypeGen, visit the official documentation:
 * https://www.sanity.io/docs/sanity-typegen
 * ---------------------------------------------------------------------------------
 */

// Source: schema.json
export type Reaction = {
  _id: string
  _type: 'reaction'
  _createdAt: string
  _updatedAt: string
  _rev: string
  emoji?: string
  reactions?: number
}

export type Demo = {
  _id: string
  _type: 'demo'
  _createdAt: string
  _updatedAt: string
  _rev: string
  title?: string
  reactions?: Array<{
    _ref: string
    _type: 'reference'
    _weak?: boolean
    _key: string
    [internalGroqTypeReferenceTo]?: 'reaction'
  }>
  slug?: Slug
  url?: string
}

export type Theme = {
  _id: string
  _type: 'theme'
  _createdAt: string
  _updatedAt: string
  _rev: string
  background?: string
  text?: string
}

export type SanityImagePaletteSwatch = {
  _type: 'sanity.imagePaletteSwatch'
  background?: string
  foreground?: string
  population?: number
  title?: string
}

export type SanityImagePalette = {
  _type: 'sanity.imagePalette'
  darkMuted?: SanityImagePaletteSwatch
  lightVibrant?: SanityImagePaletteSwatch
  darkVibrant?: SanityImagePaletteSwatch
  vibrant?: SanityImagePaletteSwatch
  dominant?: SanityImagePaletteSwatch
  lightMuted?: SanityImagePaletteSwatch
  muted?: SanityImagePaletteSwatch
}

export type SanityImageDimensions = {
  _type: 'sanity.imageDimensions'
  height?: number
  width?: number
  aspectRatio?: number
}

export type SanityImageHotspot = {
  _type: 'sanity.imageHotspot'
  x?: number
  y?: number
  height?: number
  width?: number
}

export type SanityImageCrop = {
  _type: 'sanity.imageCrop'
  top?: number
  bottom?: number
  left?: number
  right?: number
}

export type SanityFileAsset = {
  _id: string
  _type: 'sanity.fileAsset'
  _createdAt: string
  _updatedAt: string
  _rev: string
  originalFilename?: string
  label?: string
  title?: string
  description?: string
  altText?: string
  sha1hash?: string
  extension?: string
  mimeType?: string
  size?: number
  assetId?: string
  uploadId?: string
  path?: string
  url?: string
  source?: SanityAssetSourceData
}

export type SanityImageAsset = {
  _id: string
  _type: 'sanity.imageAsset'
  _createdAt: string
  _updatedAt: string
  _rev: string
  originalFilename?: string
  label?: string
  title?: string
  description?: string
  altText?: string
  sha1hash?: string
  extension?: string
  mimeType?: string
  size?: number
  assetId?: string
  uploadId?: string
  path?: string
  url?: string
  metadata?: SanityImageMetadata
  source?: SanityAssetSourceData
}

export type SanityImageMetadata = {
  _type: 'sanity.imageMetadata'
  location?: Geopoint
  dimensions?: SanityImageDimensions
  palette?: SanityImagePalette
  lqip?: string
  blurHash?: string
  hasAlpha?: boolean
  isOpaque?: boolean
}

export type Geopoint = {
  _type: 'geopoint'
  lat?: number
  lng?: number
  alt?: number
}

export type Slug = {
  _type: 'slug'
  current?: string
  source?: string
}

export type SanityAssetSourceData = {
  _type: 'sanity.assetSourceData'
  name?: string
  id?: string
  url?: string
}

export type AllSanitySchemaTypes =
  | Reaction
  | Demo
  | Theme
  | SanityImagePaletteSwatch
  | SanityImagePalette
  | SanityImageDimensions
  | SanityImageHotspot
  | SanityImageCrop
  | SanityFileAsset
  | SanityImageAsset
  | SanityImageMetadata
  | Geopoint
  | Slug
  | SanityAssetSourceData
export declare const internalGroqTypeReferenceTo: unique symbol
// Source: ./src/components/Reactions.tsx
// Variable: REACTION_QUERY
// Query: *[_type == "reaction" && _id == $id][0]{emoji,reactions}
export type REACTION_QUERYResult = {
  emoji: string | null
  reactions: number | null
} | null

// Source: ./src/layouts/Layout.astro
// Variable: LAYOUT_QUERY
// Query: *[_id == "theme"][0]{background,text}
export type LAYOUT_QUERYResult =
  | {
      background: null
      text: null
    }
  | {
      background: string | null
      text: string | null
    }
  | null

// Source: ./src/pages/index.astro
// Variable: INDEX_QUERY
// Query: *[_type == "demo" && slug.current == $slug][0]{title,reactions[0..4]{_key,_ref}}
export type INDEX_QUERYResult = {
  title: string | null
  reactions: Array<{
    _key: string
    _ref: string
  }> | null
} | null

declare module '@sanity/client' {
  interface SanityQueries {
    '*[_type == "reaction" && _id == $id][0]{emoji,reactions}': REACTION_QUERYResult
    '*[_id == "theme"][0]{background,text}': LAYOUT_QUERYResult
    '*[_type == "demo" && slug.current == $slug][0]{title,reactions[0..4]{_key,_ref}}': INDEX_QUERYResult
  }
}
